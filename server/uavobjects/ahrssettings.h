/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup AHRSSettings AHRSSettings 
 * @brief Settings for the @ref AHRSCommsModule to control the algorithm and what is updated
 *
 * Autogenerated files and functions for AHRSSettings Object
 
 * @{ 
 *
 * @file       ahrssettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the AHRSSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: ahrssettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef AHRSSETTINGS_H
#define AHRSSETTINGS_H

// Object constants
#define AHRSSETTINGS_OBJID 0xF8591ED8
#define AHRSSETTINGS_NAME "AHRSSettings"
#define AHRSSETTINGS_METANAME "AHRSSettingsMeta"
#define AHRSSETTINGS_ISSINGLEINST 1
#define AHRSSETTINGS_ISSETTINGS 1
#define AHRSSETTINGS_NUMBYTES sizeof(AHRSSettingsData)

// Object access macros
/**
 * @function AHRSSettingsGet(dataOut)
 * @brief Populate a AHRSSettingsData object
 * @param[out] dataOut 
 */
#define AHRSSettingsGet(dataOut) UAVObjGetData(AHRSSettingsHandle(), dataOut)
#define AHRSSettingsSet(dataIn) UAVObjSetData(AHRSSettingsHandle(), dataIn)
#define AHRSSettingsInstGet(instId, dataOut) UAVObjGetInstanceData(AHRSSettingsHandle(), instId, dataOut)
#define AHRSSettingsInstSet(instId, dataIn) UAVObjSetInstanceData(AHRSSettingsHandle(), instId, dataIn)
#define AHRSSettingsConnectQueue(queue) UAVObjConnectQueue(AHRSSettingsHandle(), queue, EV_MASK_ALL_UPDATES)
#define AHRSSettingsConnectCallback(cb) UAVObjConnectCallback(AHRSSettingsHandle(), cb, EV_MASK_ALL_UPDATES)
#define AHRSSettingsCreateInstance() UAVObjCreateInstance(AHRSSettingsHandle(),&AHRSSettingsSetDefaults)
#define AHRSSettingsRequestUpdate() UAVObjRequestUpdate(AHRSSettingsHandle())
#define AHRSSettingsRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(AHRSSettingsHandle(), instId)
#define AHRSSettingsUpdated() UAVObjUpdated(AHRSSettingsHandle())
#define AHRSSettingsInstUpdated(instId) UAVObjUpdated(AHRSSettingsHandle(), instId)
#define AHRSSettingsGetMetadata(dataOut) UAVObjGetMetadata(AHRSSettingsHandle(), dataOut)
#define AHRSSettingsSetMetadata(dataIn) UAVObjSetMetadata(AHRSSettingsHandle(), dataIn)
#define AHRSSettingsReadOnly() UAVObjReadOnly(AHRSSettingsHandle())

// Object data
typedef struct {
    float YawBias;
    float PitchBias;
    float RollBias;
    uint8_t Algorithm;
    uint8_t Downsampling;
    uint8_t UpdatePeriod;
    uint8_t BiasCorrectedRaw;

} __attribute__((packed)) AHRSSettingsData;

// Field information
// Field YawBias information
// Field PitchBias information
// Field RollBias information
// Field Algorithm information
/* Enumeration options for field Algorithm */
typedef enum { AHRSSETTINGS_ALGORITHM_SIMPLE=0, AHRSSETTINGS_ALGORITHM_INSGPS_INDOOR_NOMAG=1, AHRSSETTINGS_ALGORITHM_INSGPS_INDOOR=2, AHRSSETTINGS_ALGORITHM_INSGPS_OUTDOOR=3 } AHRSSettingsAlgorithmOptions;
// Field Downsampling information
// Field UpdatePeriod information
// Field BiasCorrectedRaw information
/* Enumeration options for field BiasCorrectedRaw */
typedef enum { AHRSSETTINGS_BIASCORRECTEDRAW_TRUE=0, AHRSSETTINGS_BIASCORRECTEDRAW_FALSE=1 } AHRSSettingsBiasCorrectedRawOptions;


// Generic interface functions
int32_t AHRSSettingsInitialize();
UAVObjHandle AHRSSettingsHandle();
void AHRSSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void AHRSSettingsYawBiasSet( float *NewYawBias );
extern void AHRSSettingsYawBiasGet( float *NewYawBias );
extern void AHRSSettingsPitchBiasSet( float *NewPitchBias );
extern void AHRSSettingsPitchBiasGet( float *NewPitchBias );
extern void AHRSSettingsRollBiasSet( float *NewRollBias );
extern void AHRSSettingsRollBiasGet( float *NewRollBias );
extern void AHRSSettingsAlgorithmSet( uint8_t *NewAlgorithm );
extern void AHRSSettingsAlgorithmGet( uint8_t *NewAlgorithm );
extern void AHRSSettingsDownsamplingSet( uint8_t *NewDownsampling );
extern void AHRSSettingsDownsamplingGet( uint8_t *NewDownsampling );
extern void AHRSSettingsUpdatePeriodSet( uint8_t *NewUpdatePeriod );
extern void AHRSSettingsUpdatePeriodGet( uint8_t *NewUpdatePeriod );
extern void AHRSSettingsBiasCorrectedRawSet( uint8_t *NewBiasCorrectedRaw );
extern void AHRSSettingsBiasCorrectedRawGet( uint8_t *NewBiasCorrectedRaw );


#endif // AHRSSETTINGS_H

/**
 * @}
 * @}
 */
