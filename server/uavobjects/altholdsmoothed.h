/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup AltHoldSmoothed AltHoldSmoothed 
 * @brief The output on the kalman filter on altitude.
 *
 * Autogenerated files and functions for AltHoldSmoothed Object
 
 * @{ 
 *
 * @file       altholdsmoothed.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the AltHoldSmoothed object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: altholdsmoothed.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef ALTHOLDSMOOTHED_H
#define ALTHOLDSMOOTHED_H

// Object constants
#define ALTHOLDSMOOTHED_OBJID 0x2BC6B9D2
#define ALTHOLDSMOOTHED_NAME "AltHoldSmoothed"
#define ALTHOLDSMOOTHED_METANAME "AltHoldSmoothedMeta"
#define ALTHOLDSMOOTHED_ISSINGLEINST 1
#define ALTHOLDSMOOTHED_ISSETTINGS 0
#define ALTHOLDSMOOTHED_NUMBYTES sizeof(AltHoldSmoothedData)

// Object access macros
/**
 * @function AltHoldSmoothedGet(dataOut)
 * @brief Populate a AltHoldSmoothedData object
 * @param[out] dataOut 
 */
#define AltHoldSmoothedGet(dataOut) UAVObjGetData(AltHoldSmoothedHandle(), dataOut)
#define AltHoldSmoothedSet(dataIn) UAVObjSetData(AltHoldSmoothedHandle(), dataIn)
#define AltHoldSmoothedInstGet(instId, dataOut) UAVObjGetInstanceData(AltHoldSmoothedHandle(), instId, dataOut)
#define AltHoldSmoothedInstSet(instId, dataIn) UAVObjSetInstanceData(AltHoldSmoothedHandle(), instId, dataIn)
#define AltHoldSmoothedConnectQueue(queue) UAVObjConnectQueue(AltHoldSmoothedHandle(), queue, EV_MASK_ALL_UPDATES)
#define AltHoldSmoothedConnectCallback(cb) UAVObjConnectCallback(AltHoldSmoothedHandle(), cb, EV_MASK_ALL_UPDATES)
#define AltHoldSmoothedCreateInstance() UAVObjCreateInstance(AltHoldSmoothedHandle(),&AltHoldSmoothedSetDefaults)
#define AltHoldSmoothedRequestUpdate() UAVObjRequestUpdate(AltHoldSmoothedHandle())
#define AltHoldSmoothedRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(AltHoldSmoothedHandle(), instId)
#define AltHoldSmoothedUpdated() UAVObjUpdated(AltHoldSmoothedHandle())
#define AltHoldSmoothedInstUpdated(instId) UAVObjUpdated(AltHoldSmoothedHandle(), instId)
#define AltHoldSmoothedGetMetadata(dataOut) UAVObjGetMetadata(AltHoldSmoothedHandle(), dataOut)
#define AltHoldSmoothedSetMetadata(dataIn) UAVObjSetMetadata(AltHoldSmoothedHandle(), dataIn)
#define AltHoldSmoothedReadOnly() UAVObjReadOnly(AltHoldSmoothedHandle())

// Object data
typedef struct {
    float Altitude;
    float Velocity;
    float Accel;

} __attribute__((packed)) AltHoldSmoothedData;

// Field information
// Field Altitude information
// Field Velocity information
// Field Accel information


// Generic interface functions
int32_t AltHoldSmoothedInitialize();
UAVObjHandle AltHoldSmoothedHandle();
void AltHoldSmoothedSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void AltHoldSmoothedAltitudeSet( float *NewAltitude );
extern void AltHoldSmoothedAltitudeGet( float *NewAltitude );
extern void AltHoldSmoothedVelocitySet( float *NewVelocity );
extern void AltHoldSmoothedVelocityGet( float *NewVelocity );
extern void AltHoldSmoothedAccelSet( float *NewAccel );
extern void AltHoldSmoothedAccelGet( float *NewAccel );


#endif // ALTHOLDSMOOTHED_H

/**
 * @}
 * @}
 */
