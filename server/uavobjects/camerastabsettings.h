/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup CameraStabSettings CameraStabSettings 
 * @brief Settings for the @ref CameraStab mmodule
 *
 * Autogenerated files and functions for CameraStabSettings Object
 
 * @{ 
 *
 * @file       camerastabsettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the CameraStabSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: camerastabsettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef CAMERASTABSETTINGS_H
#define CAMERASTABSETTINGS_H

// Object constants
#define CAMERASTABSETTINGS_OBJID 0x3B95DDBA
#define CAMERASTABSETTINGS_NAME "CameraStabSettings"
#define CAMERASTABSETTINGS_METANAME "CameraStabSettingsMeta"
#define CAMERASTABSETTINGS_ISSINGLEINST 1
#define CAMERASTABSETTINGS_ISSETTINGS 1
#define CAMERASTABSETTINGS_NUMBYTES sizeof(CameraStabSettingsData)

// Object access macros
/**
 * @function CameraStabSettingsGet(dataOut)
 * @brief Populate a CameraStabSettingsData object
 * @param[out] dataOut 
 */
#define CameraStabSettingsGet(dataOut) UAVObjGetData(CameraStabSettingsHandle(), dataOut)
#define CameraStabSettingsSet(dataIn) UAVObjSetData(CameraStabSettingsHandle(), dataIn)
#define CameraStabSettingsInstGet(instId, dataOut) UAVObjGetInstanceData(CameraStabSettingsHandle(), instId, dataOut)
#define CameraStabSettingsInstSet(instId, dataIn) UAVObjSetInstanceData(CameraStabSettingsHandle(), instId, dataIn)
#define CameraStabSettingsConnectQueue(queue) UAVObjConnectQueue(CameraStabSettingsHandle(), queue, EV_MASK_ALL_UPDATES)
#define CameraStabSettingsConnectCallback(cb) UAVObjConnectCallback(CameraStabSettingsHandle(), cb, EV_MASK_ALL_UPDATES)
#define CameraStabSettingsCreateInstance() UAVObjCreateInstance(CameraStabSettingsHandle(),&CameraStabSettingsSetDefaults)
#define CameraStabSettingsRequestUpdate() UAVObjRequestUpdate(CameraStabSettingsHandle())
#define CameraStabSettingsRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(CameraStabSettingsHandle(), instId)
#define CameraStabSettingsUpdated() UAVObjUpdated(CameraStabSettingsHandle())
#define CameraStabSettingsInstUpdated(instId) UAVObjUpdated(CameraStabSettingsHandle(), instId)
#define CameraStabSettingsGetMetadata(dataOut) UAVObjGetMetadata(CameraStabSettingsHandle(), dataOut)
#define CameraStabSettingsSetMetadata(dataIn) UAVObjSetMetadata(CameraStabSettingsHandle(), dataIn)
#define CameraStabSettingsReadOnly() UAVObjReadOnly(CameraStabSettingsHandle())

// Object data
typedef struct {
    float MaxAxisLockRate;
    uint16_t ResponseTime[3];
    uint8_t Input[3];
    uint8_t InputRange[3];
    uint8_t InputRate[3];
    uint8_t StabilizationMode[3];
    uint8_t OutputRange[3];

} __attribute__((packed)) CameraStabSettingsData;

// Field information
// Field MaxAxisLockRate information
// Field ResponseTime information
/* Array element names for field ResponseTime */
typedef enum { CAMERASTABSETTINGS_RESPONSETIME_ROLL=0, CAMERASTABSETTINGS_RESPONSETIME_PITCH=1, CAMERASTABSETTINGS_RESPONSETIME_YAW=2 } CameraStabSettingsResponseTimeElem;
/* Number of elements for field ResponseTime */
#define CAMERASTABSETTINGS_RESPONSETIME_NUMELEM 3
// Field Input information
/* Enumeration options for field Input */
typedef enum { CAMERASTABSETTINGS_INPUT_ACCESSORY0=0, CAMERASTABSETTINGS_INPUT_ACCESSORY1=1, CAMERASTABSETTINGS_INPUT_ACCESSORY2=2, CAMERASTABSETTINGS_INPUT_ACCESSORY3=3, CAMERASTABSETTINGS_INPUT_ACCESSORY4=4, CAMERASTABSETTINGS_INPUT_ACCESSORY5=5, CAMERASTABSETTINGS_INPUT_NONE=6 } CameraStabSettingsInputOptions;
/* Array element names for field Input */
typedef enum { CAMERASTABSETTINGS_INPUT_ROLL=0, CAMERASTABSETTINGS_INPUT_PITCH=1, CAMERASTABSETTINGS_INPUT_YAW=2 } CameraStabSettingsInputElem;
/* Number of elements for field Input */
#define CAMERASTABSETTINGS_INPUT_NUMELEM 3
// Field InputRange information
/* Array element names for field InputRange */
typedef enum { CAMERASTABSETTINGS_INPUTRANGE_ROLL=0, CAMERASTABSETTINGS_INPUTRANGE_PITCH=1, CAMERASTABSETTINGS_INPUTRANGE_YAW=2 } CameraStabSettingsInputRangeElem;
/* Number of elements for field InputRange */
#define CAMERASTABSETTINGS_INPUTRANGE_NUMELEM 3
// Field InputRate information
/* Array element names for field InputRate */
typedef enum { CAMERASTABSETTINGS_INPUTRATE_ROLL=0, CAMERASTABSETTINGS_INPUTRATE_PITCH=1, CAMERASTABSETTINGS_INPUTRATE_YAW=2 } CameraStabSettingsInputRateElem;
/* Number of elements for field InputRate */
#define CAMERASTABSETTINGS_INPUTRATE_NUMELEM 3
// Field StabilizationMode information
/* Enumeration options for field StabilizationMode */
typedef enum { CAMERASTABSETTINGS_STABILIZATIONMODE_ATTITUDE=0, CAMERASTABSETTINGS_STABILIZATIONMODE_AXISLOCK=1 } CameraStabSettingsStabilizationModeOptions;
/* Array element names for field StabilizationMode */
typedef enum { CAMERASTABSETTINGS_STABILIZATIONMODE_ROLL=0, CAMERASTABSETTINGS_STABILIZATIONMODE_PITCH=1, CAMERASTABSETTINGS_STABILIZATIONMODE_YAW=2 } CameraStabSettingsStabilizationModeElem;
/* Number of elements for field StabilizationMode */
#define CAMERASTABSETTINGS_STABILIZATIONMODE_NUMELEM 3
// Field OutputRange information
/* Array element names for field OutputRange */
typedef enum { CAMERASTABSETTINGS_OUTPUTRANGE_ROLL=0, CAMERASTABSETTINGS_OUTPUTRANGE_PITCH=1, CAMERASTABSETTINGS_OUTPUTRANGE_YAW=2 } CameraStabSettingsOutputRangeElem;
/* Number of elements for field OutputRange */
#define CAMERASTABSETTINGS_OUTPUTRANGE_NUMELEM 3


// Generic interface functions
int32_t CameraStabSettingsInitialize();
UAVObjHandle CameraStabSettingsHandle();
void CameraStabSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void CameraStabSettingsMaxAxisLockRateSet( float *NewMaxAxisLockRate );
extern void CameraStabSettingsMaxAxisLockRateGet( float *NewMaxAxisLockRate );
extern void CameraStabSettingsResponseTimeSet( uint16_t *NewResponseTime );
extern void CameraStabSettingsResponseTimeGet( uint16_t *NewResponseTime );
extern void CameraStabSettingsInputSet( uint8_t *NewInput );
extern void CameraStabSettingsInputGet( uint8_t *NewInput );
extern void CameraStabSettingsInputRangeSet( uint8_t *NewInputRange );
extern void CameraStabSettingsInputRangeGet( uint8_t *NewInputRange );
extern void CameraStabSettingsInputRateSet( uint8_t *NewInputRate );
extern void CameraStabSettingsInputRateGet( uint8_t *NewInputRate );
extern void CameraStabSettingsStabilizationModeSet( uint8_t *NewStabilizationMode );
extern void CameraStabSettingsStabilizationModeGet( uint8_t *NewStabilizationMode );
extern void CameraStabSettingsOutputRangeSet( uint8_t *NewOutputRange );
extern void CameraStabSettingsOutputRangeGet( uint8_t *NewOutputRange );


#endif // CAMERASTABSETTINGS_H

/**
 * @}
 * @}
 */
