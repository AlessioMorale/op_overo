/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup CameraDesired CameraDesired 
 * @brief Desired camera outputs.  Comes from @ref CameraStabilization module.
 *
 * Autogenerated files and functions for CameraDesired Object
 
 * @{ 
 *
 * @file       cameradesired.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the CameraDesired object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: cameradesired.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef CAMERADESIRED_H
#define CAMERADESIRED_H

// Object constants
#define CAMERADESIRED_OBJID 0x531F544E
#define CAMERADESIRED_NAME "CameraDesired"
#define CAMERADESIRED_METANAME "CameraDesiredMeta"
#define CAMERADESIRED_ISSINGLEINST 1
#define CAMERADESIRED_ISSETTINGS 0
#define CAMERADESIRED_NUMBYTES sizeof(CameraDesiredData)

// Object access macros
/**
 * @function CameraDesiredGet(dataOut)
 * @brief Populate a CameraDesiredData object
 * @param[out] dataOut 
 */
#define CameraDesiredGet(dataOut) UAVObjGetData(CameraDesiredHandle(), dataOut)
#define CameraDesiredSet(dataIn) UAVObjSetData(CameraDesiredHandle(), dataIn)
#define CameraDesiredInstGet(instId, dataOut) UAVObjGetInstanceData(CameraDesiredHandle(), instId, dataOut)
#define CameraDesiredInstSet(instId, dataIn) UAVObjSetInstanceData(CameraDesiredHandle(), instId, dataIn)
#define CameraDesiredConnectQueue(queue) UAVObjConnectQueue(CameraDesiredHandle(), queue, EV_MASK_ALL_UPDATES)
#define CameraDesiredConnectCallback(cb) UAVObjConnectCallback(CameraDesiredHandle(), cb, EV_MASK_ALL_UPDATES)
#define CameraDesiredCreateInstance() UAVObjCreateInstance(CameraDesiredHandle(),&CameraDesiredSetDefaults)
#define CameraDesiredRequestUpdate() UAVObjRequestUpdate(CameraDesiredHandle())
#define CameraDesiredRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(CameraDesiredHandle(), instId)
#define CameraDesiredUpdated() UAVObjUpdated(CameraDesiredHandle())
#define CameraDesiredInstUpdated(instId) UAVObjUpdated(CameraDesiredHandle(), instId)
#define CameraDesiredGetMetadata(dataOut) UAVObjGetMetadata(CameraDesiredHandle(), dataOut)
#define CameraDesiredSetMetadata(dataIn) UAVObjSetMetadata(CameraDesiredHandle(), dataIn)
#define CameraDesiredReadOnly() UAVObjReadOnly(CameraDesiredHandle())

// Object data
typedef struct {
    float Roll;
    float Pitch;
    float Yaw;

} __attribute__((packed)) CameraDesiredData;

// Field information
// Field Roll information
// Field Pitch information
// Field Yaw information


// Generic interface functions
int32_t CameraDesiredInitialize();
UAVObjHandle CameraDesiredHandle();
void CameraDesiredSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void CameraDesiredRollSet( float *NewRoll );
extern void CameraDesiredRollGet( float *NewRoll );
extern void CameraDesiredPitchSet( float *NewPitch );
extern void CameraDesiredPitchGet( float *NewPitch );
extern void CameraDesiredYawSet( float *NewYaw );
extern void CameraDesiredYawGet( float *NewYaw );


#endif // CAMERADESIRED_H

/**
 * @}
 * @}
 */
