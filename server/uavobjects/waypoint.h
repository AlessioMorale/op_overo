/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup Waypoint Waypoint 
 * @brief A waypoint the aircraft can try and hit.  Used by the @ref PathPlanner module
 *
 * Autogenerated files and functions for Waypoint Object
 
 * @{ 
 *
 * @file       waypoint.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the Waypoint object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: waypoint.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef WAYPOINT_H
#define WAYPOINT_H

// Object constants
#define WAYPOINT_OBJID 0x174289F0
#define WAYPOINT_NAME "Waypoint"
#define WAYPOINT_METANAME "WaypointMeta"
#define WAYPOINT_ISSINGLEINST 0
#define WAYPOINT_ISSETTINGS 0
#define WAYPOINT_NUMBYTES sizeof(WaypointData)

// Object access macros
/**
 * @function WaypointGet(dataOut)
 * @brief Populate a WaypointData object
 * @param[out] dataOut 
 */
#define WaypointGet(dataOut) UAVObjGetData(WaypointHandle(), dataOut)
#define WaypointSet(dataIn) UAVObjSetData(WaypointHandle(), dataIn)
#define WaypointInstGet(instId, dataOut) UAVObjGetInstanceData(WaypointHandle(), instId, dataOut)
#define WaypointInstSet(instId, dataIn) UAVObjSetInstanceData(WaypointHandle(), instId, dataIn)
#define WaypointConnectQueue(queue) UAVObjConnectQueue(WaypointHandle(), queue, EV_MASK_ALL_UPDATES)
#define WaypointConnectCallback(cb) UAVObjConnectCallback(WaypointHandle(), cb, EV_MASK_ALL_UPDATES)
#define WaypointCreateInstance() UAVObjCreateInstance(WaypointHandle(),&WaypointSetDefaults)
#define WaypointRequestUpdate() UAVObjRequestUpdate(WaypointHandle())
#define WaypointRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(WaypointHandle(), instId)
#define WaypointUpdated() UAVObjUpdated(WaypointHandle())
#define WaypointInstUpdated(instId) UAVObjUpdated(WaypointHandle(), instId)
#define WaypointGetMetadata(dataOut) UAVObjGetMetadata(WaypointHandle(), dataOut)
#define WaypointSetMetadata(dataIn) UAVObjSetMetadata(WaypointHandle(), dataIn)
#define WaypointReadOnly() UAVObjReadOnly(WaypointHandle())

// Object data
typedef struct {
    float Position[3];
    float Velocity[3];
    float YawDesired;
    uint8_t Action;

} __attribute__((packed)) WaypointData;

// Field information
// Field Position information
/* Array element names for field Position */
typedef enum { WAYPOINT_POSITION_NORTH=0, WAYPOINT_POSITION_EAST=1, WAYPOINT_POSITION_DOWN=2 } WaypointPositionElem;
/* Number of elements for field Position */
#define WAYPOINT_POSITION_NUMELEM 3
// Field Velocity information
/* Array element names for field Velocity */
typedef enum { WAYPOINT_VELOCITY_NORTH=0, WAYPOINT_VELOCITY_EAST=1, WAYPOINT_VELOCITY_DOWN=2 } WaypointVelocityElem;
/* Number of elements for field Velocity */
#define WAYPOINT_VELOCITY_NUMELEM 3
// Field YawDesired information
// Field Action information
/* Enumeration options for field Action */
typedef enum { WAYPOINT_ACTION_NEXT=0, WAYPOINT_ACTION_RTH=1, WAYPOINT_ACTION_LOITER10S=2, WAYPOINT_ACTION_LAND=3 } WaypointActionOptions;


// Generic interface functions
int32_t WaypointInitialize();
UAVObjHandle WaypointHandle();
void WaypointSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void WaypointPositionSet( float *NewPosition );
extern void WaypointPositionGet( float *NewPosition );
extern void WaypointVelocitySet( float *NewVelocity );
extern void WaypointVelocityGet( float *NewVelocity );
extern void WaypointYawDesiredSet( float *NewYawDesired );
extern void WaypointYawDesiredGet( float *NewYawDesired );
extern void WaypointActionSet( uint8_t *NewAction );
extern void WaypointActionGet( uint8_t *NewAction );


#endif // WAYPOINT_H

/**
 * @}
 * @}
 */
