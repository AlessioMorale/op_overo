/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup StabilizationSettings StabilizationSettings 
 * @brief PID settings used by the Stabilization module to combine the @ref AttitudeActual and @ref AttitudeDesired to compute @ref ActuatorDesired
 *
 * Autogenerated files and functions for StabilizationSettings Object
 
 * @{ 
 *
 * @file       stabilizationsettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the StabilizationSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: stabilizationsettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef STABILIZATIONSETTINGS_H
#define STABILIZATIONSETTINGS_H

// Object constants
#define STABILIZATIONSETTINGS_OBJID 0x5F78C51E
#define STABILIZATIONSETTINGS_NAME "StabilizationSettings"
#define STABILIZATIONSETTINGS_METANAME "StabilizationSettingsMeta"
#define STABILIZATIONSETTINGS_ISSINGLEINST 1
#define STABILIZATIONSETTINGS_ISSETTINGS 1
#define STABILIZATIONSETTINGS_NUMBYTES sizeof(StabilizationSettingsData)

// Object access macros
/**
 * @function StabilizationSettingsGet(dataOut)
 * @brief Populate a StabilizationSettingsData object
 * @param[out] dataOut 
 */
#define StabilizationSettingsGet(dataOut) UAVObjGetData(StabilizationSettingsHandle(), dataOut)
#define StabilizationSettingsSet(dataIn) UAVObjSetData(StabilizationSettingsHandle(), dataIn)
#define StabilizationSettingsInstGet(instId, dataOut) UAVObjGetInstanceData(StabilizationSettingsHandle(), instId, dataOut)
#define StabilizationSettingsInstSet(instId, dataIn) UAVObjSetInstanceData(StabilizationSettingsHandle(), instId, dataIn)
#define StabilizationSettingsConnectQueue(queue) UAVObjConnectQueue(StabilizationSettingsHandle(), queue, EV_MASK_ALL_UPDATES)
#define StabilizationSettingsConnectCallback(cb) UAVObjConnectCallback(StabilizationSettingsHandle(), cb, EV_MASK_ALL_UPDATES)
#define StabilizationSettingsCreateInstance() UAVObjCreateInstance(StabilizationSettingsHandle(),&StabilizationSettingsSetDefaults)
#define StabilizationSettingsRequestUpdate() UAVObjRequestUpdate(StabilizationSettingsHandle())
#define StabilizationSettingsRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(StabilizationSettingsHandle(), instId)
#define StabilizationSettingsUpdated() UAVObjUpdated(StabilizationSettingsHandle())
#define StabilizationSettingsInstUpdated(instId) UAVObjUpdated(StabilizationSettingsHandle(), instId)
#define StabilizationSettingsGetMetadata(dataOut) UAVObjGetMetadata(StabilizationSettingsHandle(), dataOut)
#define StabilizationSettingsSetMetadata(dataIn) UAVObjSetMetadata(StabilizationSettingsHandle(), dataIn)
#define StabilizationSettingsReadOnly() UAVObjReadOnly(StabilizationSettingsHandle())

// Object data
typedef struct {
    float ManualRate[3];
    float MaximumRate[3];
    float RollRatePID[4];
    float PitchRatePID[4];
    float YawRatePID[4];
    float RollPI[3];
    float PitchPI[3];
    float YawPI[3];
    float GyroTau;
    float WeakLevelingKp;
    uint8_t RollMax;
    uint8_t PitchMax;
    uint8_t YawMax;
    uint8_t MaxAxisLock;
    uint8_t MaxAxisLockRate;
    uint8_t MaxWeakLevelingRate;
    uint8_t LowThrottleZeroIntegral;

} __attribute__((packed)) StabilizationSettingsData;

// Field information
// Field ManualRate information
/* Array element names for field ManualRate */
typedef enum { STABILIZATIONSETTINGS_MANUALRATE_ROLL=0, STABILIZATIONSETTINGS_MANUALRATE_PITCH=1, STABILIZATIONSETTINGS_MANUALRATE_YAW=2 } StabilizationSettingsManualRateElem;
/* Number of elements for field ManualRate */
#define STABILIZATIONSETTINGS_MANUALRATE_NUMELEM 3
// Field MaximumRate information
/* Array element names for field MaximumRate */
typedef enum { STABILIZATIONSETTINGS_MAXIMUMRATE_ROLL=0, STABILIZATIONSETTINGS_MAXIMUMRATE_PITCH=1, STABILIZATIONSETTINGS_MAXIMUMRATE_YAW=2 } StabilizationSettingsMaximumRateElem;
/* Number of elements for field MaximumRate */
#define STABILIZATIONSETTINGS_MAXIMUMRATE_NUMELEM 3
// Field RollRatePID information
/* Array element names for field RollRatePID */
typedef enum { STABILIZATIONSETTINGS_ROLLRATEPID_KP=0, STABILIZATIONSETTINGS_ROLLRATEPID_KI=1, STABILIZATIONSETTINGS_ROLLRATEPID_KD=2, STABILIZATIONSETTINGS_ROLLRATEPID_ILIMIT=3 } StabilizationSettingsRollRatePIDElem;
/* Number of elements for field RollRatePID */
#define STABILIZATIONSETTINGS_ROLLRATEPID_NUMELEM 4
// Field PitchRatePID information
/* Array element names for field PitchRatePID */
typedef enum { STABILIZATIONSETTINGS_PITCHRATEPID_KP=0, STABILIZATIONSETTINGS_PITCHRATEPID_KI=1, STABILIZATIONSETTINGS_PITCHRATEPID_KD=2, STABILIZATIONSETTINGS_PITCHRATEPID_ILIMIT=3 } StabilizationSettingsPitchRatePIDElem;
/* Number of elements for field PitchRatePID */
#define STABILIZATIONSETTINGS_PITCHRATEPID_NUMELEM 4
// Field YawRatePID information
/* Array element names for field YawRatePID */
typedef enum { STABILIZATIONSETTINGS_YAWRATEPID_KP=0, STABILIZATIONSETTINGS_YAWRATEPID_KI=1, STABILIZATIONSETTINGS_YAWRATEPID_KD=2, STABILIZATIONSETTINGS_YAWRATEPID_ILIMIT=3 } StabilizationSettingsYawRatePIDElem;
/* Number of elements for field YawRatePID */
#define STABILIZATIONSETTINGS_YAWRATEPID_NUMELEM 4
// Field RollPI information
/* Array element names for field RollPI */
typedef enum { STABILIZATIONSETTINGS_ROLLPI_KP=0, STABILIZATIONSETTINGS_ROLLPI_KI=1, STABILIZATIONSETTINGS_ROLLPI_ILIMIT=2 } StabilizationSettingsRollPIElem;
/* Number of elements for field RollPI */
#define STABILIZATIONSETTINGS_ROLLPI_NUMELEM 3
// Field PitchPI information
/* Array element names for field PitchPI */
typedef enum { STABILIZATIONSETTINGS_PITCHPI_KP=0, STABILIZATIONSETTINGS_PITCHPI_KI=1, STABILIZATIONSETTINGS_PITCHPI_ILIMIT=2 } StabilizationSettingsPitchPIElem;
/* Number of elements for field PitchPI */
#define STABILIZATIONSETTINGS_PITCHPI_NUMELEM 3
// Field YawPI information
/* Array element names for field YawPI */
typedef enum { STABILIZATIONSETTINGS_YAWPI_KP=0, STABILIZATIONSETTINGS_YAWPI_KI=1, STABILIZATIONSETTINGS_YAWPI_ILIMIT=2 } StabilizationSettingsYawPIElem;
/* Number of elements for field YawPI */
#define STABILIZATIONSETTINGS_YAWPI_NUMELEM 3
// Field GyroTau information
// Field WeakLevelingKp information
// Field RollMax information
// Field PitchMax information
// Field YawMax information
// Field MaxAxisLock information
// Field MaxAxisLockRate information
// Field MaxWeakLevelingRate information
// Field LowThrottleZeroIntegral information
/* Enumeration options for field LowThrottleZeroIntegral */
typedef enum { STABILIZATIONSETTINGS_LOWTHROTTLEZEROINTEGRAL_FALSE=0, STABILIZATIONSETTINGS_LOWTHROTTLEZEROINTEGRAL_TRUE=1 } StabilizationSettingsLowThrottleZeroIntegralOptions;


// Generic interface functions
int32_t StabilizationSettingsInitialize();
UAVObjHandle StabilizationSettingsHandle();
void StabilizationSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void StabilizationSettingsManualRateSet( float *NewManualRate );
extern void StabilizationSettingsManualRateGet( float *NewManualRate );
extern void StabilizationSettingsMaximumRateSet( float *NewMaximumRate );
extern void StabilizationSettingsMaximumRateGet( float *NewMaximumRate );
extern void StabilizationSettingsRollRatePIDSet( float *NewRollRatePID );
extern void StabilizationSettingsRollRatePIDGet( float *NewRollRatePID );
extern void StabilizationSettingsPitchRatePIDSet( float *NewPitchRatePID );
extern void StabilizationSettingsPitchRatePIDGet( float *NewPitchRatePID );
extern void StabilizationSettingsYawRatePIDSet( float *NewYawRatePID );
extern void StabilizationSettingsYawRatePIDGet( float *NewYawRatePID );
extern void StabilizationSettingsRollPISet( float *NewRollPI );
extern void StabilizationSettingsRollPIGet( float *NewRollPI );
extern void StabilizationSettingsPitchPISet( float *NewPitchPI );
extern void StabilizationSettingsPitchPIGet( float *NewPitchPI );
extern void StabilizationSettingsYawPISet( float *NewYawPI );
extern void StabilizationSettingsYawPIGet( float *NewYawPI );
extern void StabilizationSettingsGyroTauSet( float *NewGyroTau );
extern void StabilizationSettingsGyroTauGet( float *NewGyroTau );
extern void StabilizationSettingsWeakLevelingKpSet( float *NewWeakLevelingKp );
extern void StabilizationSettingsWeakLevelingKpGet( float *NewWeakLevelingKp );
extern void StabilizationSettingsRollMaxSet( uint8_t *NewRollMax );
extern void StabilizationSettingsRollMaxGet( uint8_t *NewRollMax );
extern void StabilizationSettingsPitchMaxSet( uint8_t *NewPitchMax );
extern void StabilizationSettingsPitchMaxGet( uint8_t *NewPitchMax );
extern void StabilizationSettingsYawMaxSet( uint8_t *NewYawMax );
extern void StabilizationSettingsYawMaxGet( uint8_t *NewYawMax );
extern void StabilizationSettingsMaxAxisLockSet( uint8_t *NewMaxAxisLock );
extern void StabilizationSettingsMaxAxisLockGet( uint8_t *NewMaxAxisLock );
extern void StabilizationSettingsMaxAxisLockRateSet( uint8_t *NewMaxAxisLockRate );
extern void StabilizationSettingsMaxAxisLockRateGet( uint8_t *NewMaxAxisLockRate );
extern void StabilizationSettingsMaxWeakLevelingRateSet( uint8_t *NewMaxWeakLevelingRate );
extern void StabilizationSettingsMaxWeakLevelingRateGet( uint8_t *NewMaxWeakLevelingRate );
extern void StabilizationSettingsLowThrottleZeroIntegralSet( uint8_t *NewLowThrottleZeroIntegral );
extern void StabilizationSettingsLowThrottleZeroIntegralGet( uint8_t *NewLowThrottleZeroIntegral );


#endif // STABILIZATIONSETTINGS_H

/**
 * @}
 * @}
 */
