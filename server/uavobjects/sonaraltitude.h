/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup SonarAltitude SonarAltitude 
 * @brief The raw data from the ultrasound sonar sensor with altitude estimate.
 *
 * Autogenerated files and functions for SonarAltitude Object
 
 * @{ 
 *
 * @file       sonaraltitude.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the SonarAltitude object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: sonaraltitude.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef SONARALTITUDE_H
#define SONARALTITUDE_H

// Object constants
#define SONARALTITUDE_OBJID 0x6C5A0CBC
#define SONARALTITUDE_ISSINGLEINST 1
#define SONARALTITUDE_ISSETTINGS 0
#define SONARALTITUDE_NUMBYTES sizeof(SonarAltitudeData)

// Object access macros
/**
 * @function SonarAltitudeGet(dataOut)
 * @brief Populate a SonarAltitudeData object
 * @param[out] dataOut 
 */
#define SonarAltitudeGet(dataOut) UAVObjGetData(SonarAltitudeHandle(), dataOut)
#define SonarAltitudeSet(dataIn) UAVObjSetData(SonarAltitudeHandle(), dataIn)
#define SonarAltitudeInstGet(instId, dataOut) UAVObjGetInstanceData(SonarAltitudeHandle(), instId, dataOut)
#define SonarAltitudeInstSet(instId, dataIn) UAVObjSetInstanceData(SonarAltitudeHandle(), instId, dataIn)
#define SonarAltitudeConnectQueue(queue) UAVObjConnectQueue(SonarAltitudeHandle(), queue, EV_MASK_ALL_UPDATES)
#define SonarAltitudeConnectCallback(cb) UAVObjConnectCallback(SonarAltitudeHandle(), cb, EV_MASK_ALL_UPDATES)
#define SonarAltitudeCreateInstance() UAVObjCreateInstance(SonarAltitudeHandle(),&SonarAltitudeSetDefaults)
#define SonarAltitudeRequestUpdate() UAVObjRequestUpdate(SonarAltitudeHandle())
#define SonarAltitudeRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(SonarAltitudeHandle(), instId)
#define SonarAltitudeUpdated() UAVObjUpdated(SonarAltitudeHandle())
#define SonarAltitudeInstUpdated(instId) UAVObjUpdated(SonarAltitudeHandle(), instId)
#define SonarAltitudeGetMetadata(dataOut) UAVObjGetMetadata(SonarAltitudeHandle(), dataOut)
#define SonarAltitudeSetMetadata(dataIn) UAVObjSetMetadata(SonarAltitudeHandle(), dataIn)
#define SonarAltitudeReadOnly() UAVObjReadOnly(SonarAltitudeHandle())

// Object data
typedef struct {
    float Altitude;

} __attribute__((packed)) SonarAltitudeData;

// Field information
// Field Altitude information


// Generic interface functions
int32_t SonarAltitudeInitialize();
UAVObjHandle SonarAltitudeHandle();
void SonarAltitudeSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void SonarAltitudeAltitudeSet( float *NewAltitude );
extern void SonarAltitudeAltitudeGet( float *NewAltitude );


#endif // SONARALTITUDE_H

/**
 * @}
 * @}
 */
