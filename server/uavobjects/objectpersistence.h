/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup ObjectPersistence ObjectPersistence 
 * @brief Someone who knows please enter this
 *
 * Autogenerated files and functions for ObjectPersistence Object
 
 * @{ 
 *
 * @file       objectpersistence.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the ObjectPersistence object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: objectpersistence.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef OBJECTPERSISTENCE_H
#define OBJECTPERSISTENCE_H

// Object constants
#define OBJECTPERSISTENCE_OBJID 0xF69AD8B8
#define OBJECTPERSISTENCE_NAME "ObjectPersistence"
#define OBJECTPERSISTENCE_METANAME "ObjectPersistenceMeta"
#define OBJECTPERSISTENCE_ISSINGLEINST 1
#define OBJECTPERSISTENCE_ISSETTINGS 0
#define OBJECTPERSISTENCE_NUMBYTES sizeof(ObjectPersistenceData)

// Object access macros
/**
 * @function ObjectPersistenceGet(dataOut)
 * @brief Populate a ObjectPersistenceData object
 * @param[out] dataOut 
 */
#define ObjectPersistenceGet(dataOut) UAVObjGetData(ObjectPersistenceHandle(), dataOut)
#define ObjectPersistenceSet(dataIn) UAVObjSetData(ObjectPersistenceHandle(), dataIn)
#define ObjectPersistenceInstGet(instId, dataOut) UAVObjGetInstanceData(ObjectPersistenceHandle(), instId, dataOut)
#define ObjectPersistenceInstSet(instId, dataIn) UAVObjSetInstanceData(ObjectPersistenceHandle(), instId, dataIn)
#define ObjectPersistenceConnectQueue(queue) UAVObjConnectQueue(ObjectPersistenceHandle(), queue, EV_MASK_ALL_UPDATES)
#define ObjectPersistenceConnectCallback(cb) UAVObjConnectCallback(ObjectPersistenceHandle(), cb, EV_MASK_ALL_UPDATES)
#define ObjectPersistenceCreateInstance() UAVObjCreateInstance(ObjectPersistenceHandle(),&ObjectPersistenceSetDefaults)
#define ObjectPersistenceRequestUpdate() UAVObjRequestUpdate(ObjectPersistenceHandle())
#define ObjectPersistenceRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(ObjectPersistenceHandle(), instId)
#define ObjectPersistenceUpdated() UAVObjUpdated(ObjectPersistenceHandle())
#define ObjectPersistenceInstUpdated(instId) UAVObjUpdated(ObjectPersistenceHandle(), instId)
#define ObjectPersistenceGetMetadata(dataOut) UAVObjGetMetadata(ObjectPersistenceHandle(), dataOut)
#define ObjectPersistenceSetMetadata(dataIn) UAVObjSetMetadata(ObjectPersistenceHandle(), dataIn)
#define ObjectPersistenceReadOnly() UAVObjReadOnly(ObjectPersistenceHandle())

// Object data
typedef struct {
    uint32_t ObjectID;
    uint32_t InstanceID;
    uint8_t Operation;
    uint8_t Selection;

} __attribute__((packed)) ObjectPersistenceData;

// Field information
// Field ObjectID information
// Field InstanceID information
// Field Operation information
/* Enumeration options for field Operation */
typedef enum { OBJECTPERSISTENCE_OPERATION_NOP=0, OBJECTPERSISTENCE_OPERATION_LOAD=1, OBJECTPERSISTENCE_OPERATION_SAVE=2, OBJECTPERSISTENCE_OPERATION_DELETE=3, OBJECTPERSISTENCE_OPERATION_FULLERASE=4, OBJECTPERSISTENCE_OPERATION_COMPLETED=5 } ObjectPersistenceOperationOptions;
// Field Selection information
/* Enumeration options for field Selection */
typedef enum { OBJECTPERSISTENCE_SELECTION_SINGLEOBJECT=0, OBJECTPERSISTENCE_SELECTION_ALLSETTINGS=1, OBJECTPERSISTENCE_SELECTION_ALLMETAOBJECTS=2, OBJECTPERSISTENCE_SELECTION_ALLOBJECTS=3 } ObjectPersistenceSelectionOptions;


// Generic interface functions
int32_t ObjectPersistenceInitialize();
UAVObjHandle ObjectPersistenceHandle();
void ObjectPersistenceSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void ObjectPersistenceObjectIDSet( uint32_t *NewObjectID );
extern void ObjectPersistenceObjectIDGet( uint32_t *NewObjectID );
extern void ObjectPersistenceInstanceIDSet( uint32_t *NewInstanceID );
extern void ObjectPersistenceInstanceIDGet( uint32_t *NewInstanceID );
extern void ObjectPersistenceOperationSet( uint8_t *NewOperation );
extern void ObjectPersistenceOperationGet( uint8_t *NewOperation );
extern void ObjectPersistenceSelectionSet( uint8_t *NewSelection );
extern void ObjectPersistenceSelectionGet( uint8_t *NewSelection );


#endif // OBJECTPERSISTENCE_H

/**
 * @}
 * @}
 */
