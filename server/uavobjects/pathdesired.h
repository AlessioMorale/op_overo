/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup PathDesired PathDesired 
 * @brief The position the craft is trying t achieve.  Can come from GCS or @ref PathPlanner 
 *
 * Autogenerated files and functions for PathDesired Object
 
 * @{ 
 *
 * @file       pathdesired.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the PathDesired object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: pathdesired.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef PATHDESIRED_H
#define PATHDESIRED_H

// Object constants
#define PATHDESIRED_OBJID 0xF30D91F2
#define PATHDESIRED_NAME "PathDesired"
#define PATHDESIRED_METANAME "PathDesiredMeta"
#define PATHDESIRED_ISSINGLEINST 1
#define PATHDESIRED_ISSETTINGS 0
#define PATHDESIRED_NUMBYTES sizeof(PathDesiredData)

// Object access macros
/**
 * @function PathDesiredGet(dataOut)
 * @brief Populate a PathDesiredData object
 * @param[out] dataOut 
 */
#define PathDesiredGet(dataOut) UAVObjGetData(PathDesiredHandle(), dataOut)
#define PathDesiredSet(dataIn) UAVObjSetData(PathDesiredHandle(), dataIn)
#define PathDesiredInstGet(instId, dataOut) UAVObjGetInstanceData(PathDesiredHandle(), instId, dataOut)
#define PathDesiredInstSet(instId, dataIn) UAVObjSetInstanceData(PathDesiredHandle(), instId, dataIn)
#define PathDesiredConnectQueue(queue) UAVObjConnectQueue(PathDesiredHandle(), queue, EV_MASK_ALL_UPDATES)
#define PathDesiredConnectCallback(cb) UAVObjConnectCallback(PathDesiredHandle(), cb, EV_MASK_ALL_UPDATES)
#define PathDesiredCreateInstance() UAVObjCreateInstance(PathDesiredHandle(),&PathDesiredSetDefaults)
#define PathDesiredRequestUpdate() UAVObjRequestUpdate(PathDesiredHandle())
#define PathDesiredRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(PathDesiredHandle(), instId)
#define PathDesiredUpdated() UAVObjUpdated(PathDesiredHandle())
#define PathDesiredInstUpdated(instId) UAVObjUpdated(PathDesiredHandle(), instId)
#define PathDesiredGetMetadata(dataOut) UAVObjGetMetadata(PathDesiredHandle(), dataOut)
#define PathDesiredSetMetadata(dataIn) UAVObjSetMetadata(PathDesiredHandle(), dataIn)
#define PathDesiredReadOnly() UAVObjReadOnly(PathDesiredHandle())

// Object data
typedef struct {
    float Start[3];
    float End[3];
    float StartingVelocity;
    float EndingVelocity;

} __attribute__((packed)) PathDesiredData;

// Field information
// Field Start information
/* Array element names for field Start */
typedef enum { PATHDESIRED_START_NORTH=0, PATHDESIRED_START_EAST=1, PATHDESIRED_START_DOWN=2 } PathDesiredStartElem;
/* Number of elements for field Start */
#define PATHDESIRED_START_NUMELEM 3
// Field End information
/* Array element names for field End */
typedef enum { PATHDESIRED_END_NORTH=0, PATHDESIRED_END_EAST=1, PATHDESIRED_END_DOWN=2 } PathDesiredEndElem;
/* Number of elements for field End */
#define PATHDESIRED_END_NUMELEM 3
// Field StartingVelocity information
// Field EndingVelocity information


// Generic interface functions
int32_t PathDesiredInitialize();
UAVObjHandle PathDesiredHandle();
void PathDesiredSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void PathDesiredStartSet( float *NewStart );
extern void PathDesiredStartGet( float *NewStart );
extern void PathDesiredEndSet( float *NewEnd );
extern void PathDesiredEndGet( float *NewEnd );
extern void PathDesiredStartingVelocitySet( float *NewStartingVelocity );
extern void PathDesiredStartingVelocityGet( float *NewStartingVelocity );
extern void PathDesiredEndingVelocitySet( float *NewEndingVelocity );
extern void PathDesiredEndingVelocityGet( float *NewEndingVelocity );


#endif // PATHDESIRED_H

/**
 * @}
 * @}
 */
