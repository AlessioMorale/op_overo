/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup AttitudeSettings AttitudeSettings 
 * @brief Settings for the @ref Attitude module used on CopterControl
 *
 * Autogenerated files and functions for AttitudeSettings Object
 
 * @{ 
 *
 * @file       attitudesettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the AttitudeSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: attitudesettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef ATTITUDESETTINGS_H
#define ATTITUDESETTINGS_H

// Object constants
#define ATTITUDESETTINGS_OBJID 0xC307BC4A
#define ATTITUDESETTINGS_NAME "AttitudeSettings"
#define ATTITUDESETTINGS_METANAME "AttitudeSettingsMeta"
#define ATTITUDESETTINGS_ISSINGLEINST 1
#define ATTITUDESETTINGS_ISSETTINGS 1
#define ATTITUDESETTINGS_NUMBYTES sizeof(AttitudeSettingsData)

// Object access macros
/**
 * @function AttitudeSettingsGet(dataOut)
 * @brief Populate a AttitudeSettingsData object
 * @param[out] dataOut 
 */
#define AttitudeSettingsGet(dataOut) UAVObjGetData(AttitudeSettingsHandle(), dataOut)
#define AttitudeSettingsSet(dataIn) UAVObjSetData(AttitudeSettingsHandle(), dataIn)
#define AttitudeSettingsInstGet(instId, dataOut) UAVObjGetInstanceData(AttitudeSettingsHandle(), instId, dataOut)
#define AttitudeSettingsInstSet(instId, dataIn) UAVObjSetInstanceData(AttitudeSettingsHandle(), instId, dataIn)
#define AttitudeSettingsConnectQueue(queue) UAVObjConnectQueue(AttitudeSettingsHandle(), queue, EV_MASK_ALL_UPDATES)
#define AttitudeSettingsConnectCallback(cb) UAVObjConnectCallback(AttitudeSettingsHandle(), cb, EV_MASK_ALL_UPDATES)
#define AttitudeSettingsCreateInstance() UAVObjCreateInstance(AttitudeSettingsHandle(),&AttitudeSettingsSetDefaults)
#define AttitudeSettingsRequestUpdate() UAVObjRequestUpdate(AttitudeSettingsHandle())
#define AttitudeSettingsRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(AttitudeSettingsHandle(), instId)
#define AttitudeSettingsUpdated() UAVObjUpdated(AttitudeSettingsHandle())
#define AttitudeSettingsInstUpdated(instId) UAVObjUpdated(AttitudeSettingsHandle(), instId)
#define AttitudeSettingsGetMetadata(dataOut) UAVObjGetMetadata(AttitudeSettingsHandle(), dataOut)
#define AttitudeSettingsSetMetadata(dataIn) UAVObjSetMetadata(AttitudeSettingsHandle(), dataIn)
#define AttitudeSettingsReadOnly() UAVObjReadOnly(AttitudeSettingsHandle())

// Object data
typedef struct {
    float GyroGain;
    float AccelKp;
    float AccelKi;
    float YawBiasRate;
    int16_t AccelBias[3];
    int16_t GyroBias[3];
    int16_t BoardRotation[3];
    uint8_t ZeroDuringArming;
    uint8_t BiasCorrectGyro;
    uint8_t TrimFlight;

} __attribute__((packed)) AttitudeSettingsData;

// Field information
// Field GyroGain information
// Field AccelKp information
// Field AccelKi information
// Field YawBiasRate information
// Field AccelBias information
/* Array element names for field AccelBias */
typedef enum { ATTITUDESETTINGS_ACCELBIAS_X=0, ATTITUDESETTINGS_ACCELBIAS_Y=1, ATTITUDESETTINGS_ACCELBIAS_Z=2 } AttitudeSettingsAccelBiasElem;
/* Number of elements for field AccelBias */
#define ATTITUDESETTINGS_ACCELBIAS_NUMELEM 3
// Field GyroBias information
/* Array element names for field GyroBias */
typedef enum { ATTITUDESETTINGS_GYROBIAS_X=0, ATTITUDESETTINGS_GYROBIAS_Y=1, ATTITUDESETTINGS_GYROBIAS_Z=2 } AttitudeSettingsGyroBiasElem;
/* Number of elements for field GyroBias */
#define ATTITUDESETTINGS_GYROBIAS_NUMELEM 3
// Field BoardRotation information
/* Array element names for field BoardRotation */
typedef enum { ATTITUDESETTINGS_BOARDROTATION_ROLL=0, ATTITUDESETTINGS_BOARDROTATION_PITCH=1, ATTITUDESETTINGS_BOARDROTATION_YAW=2 } AttitudeSettingsBoardRotationElem;
/* Number of elements for field BoardRotation */
#define ATTITUDESETTINGS_BOARDROTATION_NUMELEM 3
// Field ZeroDuringArming information
/* Enumeration options for field ZeroDuringArming */
typedef enum { ATTITUDESETTINGS_ZERODURINGARMING_FALSE=0, ATTITUDESETTINGS_ZERODURINGARMING_TRUE=1 } AttitudeSettingsZeroDuringArmingOptions;
// Field BiasCorrectGyro information
/* Enumeration options for field BiasCorrectGyro */
typedef enum { ATTITUDESETTINGS_BIASCORRECTGYRO_FALSE=0, ATTITUDESETTINGS_BIASCORRECTGYRO_TRUE=1 } AttitudeSettingsBiasCorrectGyroOptions;
// Field TrimFlight information
/* Enumeration options for field TrimFlight */
typedef enum { ATTITUDESETTINGS_TRIMFLIGHT_NORMAL=0, ATTITUDESETTINGS_TRIMFLIGHT_START=1, ATTITUDESETTINGS_TRIMFLIGHT_LOAD=2 } AttitudeSettingsTrimFlightOptions;


// Generic interface functions
int32_t AttitudeSettingsInitialize();
UAVObjHandle AttitudeSettingsHandle();
void AttitudeSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void AttitudeSettingsGyroGainSet( float *NewGyroGain );
extern void AttitudeSettingsGyroGainGet( float *NewGyroGain );
extern void AttitudeSettingsAccelKpSet( float *NewAccelKp );
extern void AttitudeSettingsAccelKpGet( float *NewAccelKp );
extern void AttitudeSettingsAccelKiSet( float *NewAccelKi );
extern void AttitudeSettingsAccelKiGet( float *NewAccelKi );
extern void AttitudeSettingsYawBiasRateSet( float *NewYawBiasRate );
extern void AttitudeSettingsYawBiasRateGet( float *NewYawBiasRate );
extern void AttitudeSettingsAccelBiasSet( int16_t *NewAccelBias );
extern void AttitudeSettingsAccelBiasGet( int16_t *NewAccelBias );
extern void AttitudeSettingsGyroBiasSet( int16_t *NewGyroBias );
extern void AttitudeSettingsGyroBiasGet( int16_t *NewGyroBias );
extern void AttitudeSettingsBoardRotationSet( int16_t *NewBoardRotation );
extern void AttitudeSettingsBoardRotationGet( int16_t *NewBoardRotation );
extern void AttitudeSettingsZeroDuringArmingSet( uint8_t *NewZeroDuringArming );
extern void AttitudeSettingsZeroDuringArmingGet( uint8_t *NewZeroDuringArming );
extern void AttitudeSettingsBiasCorrectGyroSet( uint8_t *NewBiasCorrectGyro );
extern void AttitudeSettingsBiasCorrectGyroGet( uint8_t *NewBiasCorrectGyro );
extern void AttitudeSettingsTrimFlightSet( uint8_t *NewTrimFlight );
extern void AttitudeSettingsTrimFlightGet( uint8_t *NewTrimFlight );


#endif // ATTITUDESETTINGS_H

/**
 * @}
 * @}
 */
