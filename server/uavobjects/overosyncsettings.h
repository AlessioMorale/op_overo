/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup OveroSyncSettings OveroSyncSettings 
 * @brief Settings to control the behavior of the overo sync module
 *
 * Autogenerated files and functions for OveroSyncSettings Object
 
 * @{ 
 *
 * @file       overosyncsettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the OveroSyncSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: overosyncsettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef OVEROSYNCSETTINGS_H
#define OVEROSYNCSETTINGS_H

// Object constants
#define OVEROSYNCSETTINGS_OBJID 0xA1ABC278
#define OVEROSYNCSETTINGS_ISSINGLEINST 1
#define OVEROSYNCSETTINGS_ISSETTINGS 1
#define OVEROSYNCSETTINGS_NUMBYTES sizeof(OveroSyncSettingsData)

// Object access macros
/**
 * @function OveroSyncSettingsGet(dataOut)
 * @brief Populate a OveroSyncSettingsData object
 * @param[out] dataOut 
 */
#define OveroSyncSettingsGet(dataOut) UAVObjGetData(OveroSyncSettingsHandle(), dataOut)
#define OveroSyncSettingsSet(dataIn) UAVObjSetData(OveroSyncSettingsHandle(), dataIn)
#define OveroSyncSettingsInstGet(instId, dataOut) UAVObjGetInstanceData(OveroSyncSettingsHandle(), instId, dataOut)
#define OveroSyncSettingsInstSet(instId, dataIn) UAVObjSetInstanceData(OveroSyncSettingsHandle(), instId, dataIn)
#define OveroSyncSettingsConnectQueue(queue) UAVObjConnectQueue(OveroSyncSettingsHandle(), queue, EV_MASK_ALL_UPDATES)
#define OveroSyncSettingsConnectCallback(cb) UAVObjConnectCallback(OveroSyncSettingsHandle(), cb, EV_MASK_ALL_UPDATES)
#define OveroSyncSettingsCreateInstance() UAVObjCreateInstance(OveroSyncSettingsHandle(),&OveroSyncSettingsSetDefaults)
#define OveroSyncSettingsRequestUpdate() UAVObjRequestUpdate(OveroSyncSettingsHandle())
#define OveroSyncSettingsRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(OveroSyncSettingsHandle(), instId)
#define OveroSyncSettingsUpdated() UAVObjUpdated(OveroSyncSettingsHandle())
#define OveroSyncSettingsInstUpdated(instId) UAVObjUpdated(OveroSyncSettingsHandle(), instId)
#define OveroSyncSettingsGetMetadata(dataOut) UAVObjGetMetadata(OveroSyncSettingsHandle(), dataOut)
#define OveroSyncSettingsSetMetadata(dataIn) UAVObjSetMetadata(OveroSyncSettingsHandle(), dataIn)
#define OveroSyncSettingsReadOnly() UAVObjReadOnly(OveroSyncSettingsHandle())

// Object data
typedef struct {
    uint8_t LogOn;

} __attribute__((packed)) OveroSyncSettingsData;

// Field information
// Field LogOn information
/* Enumeration options for field LogOn */
typedef enum { OVEROSYNCSETTINGS_LOGON_NEVER=0, OVEROSYNCSETTINGS_LOGON_ALWAYS=1, OVEROSYNCSETTINGS_LOGON_ARMED=2 } OveroSyncSettingsLogOnOptions;


// Generic interface functions
int32_t OveroSyncSettingsInitialize();
UAVObjHandle OveroSyncSettingsHandle();
void OveroSyncSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void OveroSyncSettingsLogOnSet( uint8_t *NewLogOn );
extern void OveroSyncSettingsLogOnGet( uint8_t *NewLogOn );


#endif // OVEROSYNCSETTINGS_H

/**
 * @}
 * @}
 */
