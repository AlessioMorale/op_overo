/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup OveroSyncStats OveroSyncStats 
 * @brief Maintains statistics on transfer rate to and from over
 *
 * Autogenerated files and functions for OveroSyncStats Object
 
 * @{ 
 *
 * @file       overosyncstats.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the OveroSyncStats object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: overosyncstats.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef OVEROSYNCSTATS_H
#define OVEROSYNCSTATS_H

// Object constants
#define OVEROSYNCSTATS_OBJID 0x388468B8
#define OVEROSYNCSTATS_ISSINGLEINST 1
#define OVEROSYNCSTATS_ISSETTINGS 0
#define OVEROSYNCSTATS_NUMBYTES sizeof(OveroSyncStatsData)

// Object access macros
/**
 * @function OveroSyncStatsGet(dataOut)
 * @brief Populate a OveroSyncStatsData object
 * @param[out] dataOut 
 */
#define OveroSyncStatsGet(dataOut) UAVObjGetData(OveroSyncStatsHandle(), dataOut)
#define OveroSyncStatsSet(dataIn) UAVObjSetData(OveroSyncStatsHandle(), dataIn)
#define OveroSyncStatsInstGet(instId, dataOut) UAVObjGetInstanceData(OveroSyncStatsHandle(), instId, dataOut)
#define OveroSyncStatsInstSet(instId, dataIn) UAVObjSetInstanceData(OveroSyncStatsHandle(), instId, dataIn)
#define OveroSyncStatsConnectQueue(queue) UAVObjConnectQueue(OveroSyncStatsHandle(), queue, EV_MASK_ALL_UPDATES)
#define OveroSyncStatsConnectCallback(cb) UAVObjConnectCallback(OveroSyncStatsHandle(), cb, EV_MASK_ALL_UPDATES)
#define OveroSyncStatsCreateInstance() UAVObjCreateInstance(OveroSyncStatsHandle(),&OveroSyncStatsSetDefaults)
#define OveroSyncStatsRequestUpdate() UAVObjRequestUpdate(OveroSyncStatsHandle())
#define OveroSyncStatsRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(OveroSyncStatsHandle(), instId)
#define OveroSyncStatsUpdated() UAVObjUpdated(OveroSyncStatsHandle())
#define OveroSyncStatsInstUpdated(instId) UAVObjUpdated(OveroSyncStatsHandle(), instId)
#define OveroSyncStatsGetMetadata(dataOut) UAVObjGetMetadata(OveroSyncStatsHandle(), dataOut)
#define OveroSyncStatsSetMetadata(dataIn) UAVObjSetMetadata(OveroSyncStatsHandle(), dataIn)
#define OveroSyncStatsReadOnly() UAVObjReadOnly(OveroSyncStatsHandle())

// Object data
typedef struct {
    uint32_t Send;
    uint32_t Received;
    uint32_t DroppedUpdates;
    uint8_t Connected;

} __attribute__((packed)) OveroSyncStatsData;

// Field information
// Field Send information
// Field Received information
// Field DroppedUpdates information
// Field Connected information
/* Enumeration options for field Connected */
typedef enum { OVEROSYNCSTATS_CONNECTED_FALSE=0, OVEROSYNCSTATS_CONNECTED_TRUE=1 } OveroSyncStatsConnectedOptions;


// Generic interface functions
int32_t OveroSyncStatsInitialize();
UAVObjHandle OveroSyncStatsHandle();
void OveroSyncStatsSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void OveroSyncStatsSendSet( uint32_t *NewSend );
extern void OveroSyncStatsSendGet( uint32_t *NewSend );
extern void OveroSyncStatsReceivedSet( uint32_t *NewReceived );
extern void OveroSyncStatsReceivedGet( uint32_t *NewReceived );
extern void OveroSyncStatsDroppedUpdatesSet( uint32_t *NewDroppedUpdates );
extern void OveroSyncStatsDroppedUpdatesGet( uint32_t *NewDroppedUpdates );
extern void OveroSyncStatsConnectedSet( uint8_t *NewConnected );
extern void OveroSyncStatsConnectedGet( uint8_t *NewConnected );


#endif // OVEROSYNCSTATS_H

/**
 * @}
 * @}
 */
