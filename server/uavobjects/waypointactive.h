/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup WaypointActive WaypointActive 
 * @brief Indicates the currently active waypoint
 *
 * Autogenerated files and functions for WaypointActive Object
 
 * @{ 
 *
 * @file       waypointactive.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Implementation of the WaypointActive object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: waypointactive.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef WAYPOINTACTIVE_H
#define WAYPOINTACTIVE_H

// Object constants
#define WAYPOINTACTIVE_OBJID 0x1EA5B192
#define WAYPOINTACTIVE_NAME "WaypointActive"
#define WAYPOINTACTIVE_METANAME "WaypointActiveMeta"
#define WAYPOINTACTIVE_ISSINGLEINST 1
#define WAYPOINTACTIVE_ISSETTINGS 0
#define WAYPOINTACTIVE_NUMBYTES sizeof(WaypointActiveData)

// Object access macros
/**
 * @function WaypointActiveGet(dataOut)
 * @brief Populate a WaypointActiveData object
 * @param[out] dataOut 
 */
#define WaypointActiveGet(dataOut) UAVObjGetData(WaypointActiveHandle(), dataOut)
#define WaypointActiveSet(dataIn) UAVObjSetData(WaypointActiveHandle(), dataIn)
#define WaypointActiveInstGet(instId, dataOut) UAVObjGetInstanceData(WaypointActiveHandle(), instId, dataOut)
#define WaypointActiveInstSet(instId, dataIn) UAVObjSetInstanceData(WaypointActiveHandle(), instId, dataIn)
#define WaypointActiveConnectQueue(queue) UAVObjConnectQueue(WaypointActiveHandle(), queue, EV_MASK_ALL_UPDATES)
#define WaypointActiveConnectCallback(cb) UAVObjConnectCallback(WaypointActiveHandle(), cb, EV_MASK_ALL_UPDATES)
#define WaypointActiveCreateInstance() UAVObjCreateInstance(WaypointActiveHandle(),&WaypointActiveSetDefaults)
#define WaypointActiveRequestUpdate() UAVObjRequestUpdate(WaypointActiveHandle())
#define WaypointActiveRequestInstUpdate(instId) UAVObjRequestInstanceUpdate(WaypointActiveHandle(), instId)
#define WaypointActiveUpdated() UAVObjUpdated(WaypointActiveHandle())
#define WaypointActiveInstUpdated(instId) UAVObjUpdated(WaypointActiveHandle(), instId)
#define WaypointActiveGetMetadata(dataOut) UAVObjGetMetadata(WaypointActiveHandle(), dataOut)
#define WaypointActiveSetMetadata(dataIn) UAVObjSetMetadata(WaypointActiveHandle(), dataIn)
#define WaypointActiveReadOnly() UAVObjReadOnly(WaypointActiveHandle())

// Object data
typedef struct {
    uint8_t Index;

} __attribute__((packed)) WaypointActiveData;

// Field information
// Field Index information


// Generic interface functions
int32_t WaypointActiveInitialize();
UAVObjHandle WaypointActiveHandle();
void WaypointActiveSetDefaults(UAVObjHandle obj, uint16_t instId);

// set/Get functions
extern void WaypointActiveIndexSet( uint8_t *NewIndex );
extern void WaypointActiveIndexGet( uint8_t *NewIndex );


#endif // WAYPOINTACTIVE_H

/**
 * @}
 * @}
 */
